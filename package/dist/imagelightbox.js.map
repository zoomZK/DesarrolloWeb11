{"version":3,"file":"imagelightbox.js","sources":["../src/lib/query.ts","../src/lib/TransitionDirection.ts","../src/lib/history.ts","../src/lib/container.ts","../src/lib/activity-indicator.ts","../src/lib/arrows.ts","../src/lib/caption.ts","../src/lib/close-button.ts","../src/lib/fullscreen.ts","../src/lib/fullscreen-button.ts","../src/lib/ImageView.ts","../src/lib/keyboard-navigation.ts","../src/lib/navigation.ts","../src/lib/PreloadedVideo.ts","../src/lib/VideoCache.ts","../src/lib/State.ts","../src/lib/imagelightbox.ts"],"sourcesContent":["export function addQueryField(\n  query: string,\n  key: string,\n  value: string,\n): string {\n  const newField = `${key}=${value}`;\n  let newQuery = `?${newField}`;\n\n  if (query) {\n    const keyRegex = new RegExp(`([?&])${key}=[^&]*`);\n    if (keyRegex.exec(query) !== null) {\n      newQuery = query.replace(keyRegex, `$1${newField}`);\n    } else {\n      newQuery = `${query}&${newField}`;\n    }\n  }\n  return newQuery;\n}\n\nexport function getQueryField(key: string): string | undefined {\n  const keyValuePair = new RegExp(`[?&]${key}(=([^&#]*)|&|#|$)`).exec(\n    document.location.search,\n  );\n  if (keyValuePair?.[2] === undefined) {\n    return undefined;\n  }\n  return decodeURIComponent(keyValuePair[2].replace(/\\+/g, \" \"));\n}\n\nexport function removeQueryField(query: string, key: string): string {\n  let newQuery = query;\n  if (newQuery) {\n    const keyRegex1 = new RegExp(`\\\\?${key}=[^&]*`);\n    const keyRegex2 = new RegExp(`&${key}=[^&]*`);\n    newQuery = newQuery.replace(keyRegex1, \"?\");\n    newQuery = newQuery.replace(keyRegex2, \"\");\n  }\n  return newQuery;\n}\n","export const enum TransitionDirection {\n  Left = 1,\n  None = 0,\n  Right = -1,\n}\n","import { addQueryField, getQueryField, removeQueryField } from \"./query\";\nimport { TransitionDirection } from \"./TransitionDirection\";\n\ninterface HistoryState {\n  imageLightboxIndex?: string;\n  imageLightboxSet?: string;\n}\n\nexport function pushQuitToHistory(): void {\n  let newQuery = removeQueryField(\n    document.location.search,\n    \"imageLightboxIndex\",\n  );\n  newQuery = removeQueryField(newQuery, \"imageLightboxSet\");\n  window.history.pushState({}, \"\", document.location.pathname + newQuery);\n}\n\nexport function pushToHistory(\n  index: number,\n  set: string | undefined,\n  images: Array<HTMLAnchorElement>,\n): void {\n  const newIndex = images[index].dataset[\"ilb2Id\"] ?? index.toString();\n  let newQuery = addQueryField(\n    document.location.search,\n    \"imageLightboxIndex\",\n    newIndex,\n  );\n  const newHistoryState: HistoryState = {\n    imageLightboxIndex: newIndex,\n    imageLightboxSet: \"\",\n  };\n  if (set !== undefined) {\n    newHistoryState.imageLightboxSet = set;\n    newQuery = addQueryField(newQuery, \"imageLightboxSet\", set);\n  }\n  window.history.pushState(\n    newHistoryState,\n    \"\",\n    document.location.pathname + newQuery,\n  );\n}\n\nexport function openHistory(\n  set: string | undefined,\n  images: Array<HTMLAnchorElement>,\n  open: (index: number, skipHistory?: boolean) => void,\n): void {\n  if (getQueryField(\"imageLightboxSet\") !== set) {\n    return;\n  }\n  const id = getQueryField(\"imageLightboxIndex\");\n  if (id === undefined) {\n    return;\n  }\n  let newIndex = images.findIndex((image) => image.dataset[\"ilb2Id\"] === id);\n  if (newIndex < 0) {\n    newIndex = parseInt(id, 10);\n  }\n  open(newIndex, true);\n}\n\nexport function popHistory(\n  event: PopStateEvent,\n  set: string | undefined,\n  images: Array<HTMLAnchorElement>,\n  currentIndex: number | null,\n  open: (index: number, skipHistory?: boolean) => void,\n  close: (skipHistory?: boolean) => void,\n  change: (\n    index: number,\n    transitionDirection: TransitionDirection,\n    skipHistory?: boolean,\n  ) => void,\n): void {\n  const historyState = event.state as\n    | HistoryState\n    | Record<string, never>\n    | null\n    | undefined;\n  // This needs to be before checking the set in order to close the lightbox when navigating to a non-imagelightbox state\n  if (!historyState || Object.keys(historyState).length === 0) {\n    close(true);\n    return;\n  }\n  if (historyState.imageLightboxSet !== set) {\n    return;\n  }\n  const newId = historyState.imageLightboxIndex;\n  if (newId === undefined) {\n    close(true);\n    return;\n  }\n  let newIndex = images.findIndex(\n    (e: HTMLElement) => e.dataset[\"ilb2Id\"] === newId,\n  );\n  if (newIndex < 0) {\n    newIndex = parseInt(newId, 10);\n  }\n  if (currentIndex === null) {\n    open(newIndex, true);\n    return;\n  }\n  change(\n    newIndex,\n    newIndex > currentIndex\n      ? TransitionDirection.Right\n      : TransitionDirection.Left,\n    true,\n  );\n}\n","import \"./container.css\";\n\nconst container = document.createElement(\"div\");\ncontainer.setAttribute(\"id\", \"ilb-container\");\n\nlet wrappedOnclick: ((e: Event) => void) | null = null;\n\nexport function addContainerToDOM(\n  animationSpeed: number,\n  attachOnclick: boolean,\n  onclick: () => void,\n): void {\n  container.classList.remove(\"ilb-overlay\");\n  document.body.classList.add(\"ilb-body\");\n  document.body.appendChild(container);\n  if (attachOnclick) {\n    wrappedOnclick = (e): void => {\n      e.stopPropagation();\n      onclick();\n    };\n    container.addEventListener(\"click\", wrappedOnclick);\n    container.addEventListener(\"touchend\", wrappedOnclick);\n  }\n  container.style.transition = `opacity ${animationSpeed.toString()}ms ease`;\n  setTimeout(() => {\n    container.style.opacity = \"1\";\n  }, 50);\n}\n\nexport function darkenOverlay(): void {\n  container.classList.add(\"ilb-overlay\");\n}\n\nexport function transitionOutContainer(): void {\n  container.style.opacity = \"0\";\n}\n\nexport function removeContainerFromDOM(): void {\n  if (wrappedOnclick !== null) {\n    container.removeEventListener(\"click\", wrappedOnclick);\n    container.removeEventListener(\"touchend\", wrappedOnclick);\n  }\n  container.remove();\n  container.textContent = \"\";\n  document.body.classList.remove(\"ilb-body\");\n}\n\nexport function getContainer(): HTMLDivElement {\n  return container;\n}\n","import \"./activity-indicator.css\";\nimport { getContainer } from \"./container\";\n\nconst activityIndicator = document.createElement(\"div\");\nactivityIndicator.setAttribute(\"id\", \"ilb-activity-indicator\");\nactivityIndicator.appendChild(document.createElement(\"div\"));\n\nexport function addActivityIndicatorToDOM(): void {\n  getContainer().appendChild(activityIndicator);\n}\n\nexport function removeActivityIndicatorFromDOM(): void {\n  activityIndicator.remove();\n}\n","import \"./arrows.css\";\nimport \"./button.css\";\nimport { getContainer } from \"./container\";\n\nconst leftArrow = document.createElement(\"div\");\nleftArrow.classList.add(\"ilb-button\", \"ilb-arrow\");\nleftArrow.setAttribute(\"id\", \"ilb-arrow-left\");\nconst rightArrow = document.createElement(\"div\");\nrightArrow.classList.add(\"ilb-button\", \"ilb-arrow\");\nrightArrow.setAttribute(\"id\", \"ilb-arrow-right\");\n\nlet wrappedLeft: ((e: Event) => void) | null = null;\nlet wrappedRight: ((e: Event) => void) | null = null;\n\nexport function addArrowsToDOM(onleft: () => void, onright: () => void): void {\n  wrappedLeft = (e): void => {\n    e.stopPropagation();\n    onleft();\n  };\n  wrappedRight = (e): void => {\n    e.stopPropagation();\n    onright();\n  };\n  leftArrow.addEventListener(\"click\", wrappedLeft);\n  leftArrow.addEventListener(\"touchend\", wrappedLeft);\n  rightArrow.addEventListener(\"click\", wrappedRight);\n  rightArrow.addEventListener(\"touchend\", wrappedRight);\n  getContainer().append(leftArrow, rightArrow);\n}\n\nexport function removeArrowsFromDOM(): void {\n  leftArrow.remove();\n  if (wrappedLeft !== null) {\n    leftArrow.removeEventListener(\"click\", wrappedLeft);\n    leftArrow.removeEventListener(\"touchend\", wrappedLeft);\n  }\n  if (wrappedRight !== null) {\n    rightArrow.removeEventListener(\"click\", wrappedRight);\n    rightArrow.removeEventListener(\"touchend\", wrappedRight);\n  }\n  wrappedLeft = null;\n  wrappedRight = null;\n}\n","import \"./caption.css\";\nimport { getContainer } from \"./container\";\n\nconst caption = document.createElement(\"caption\");\ncaption.setAttribute(\"id\", \"ilb-caption\");\ncaption.textContent = \"&nbsp;\";\ncaption.addEventListener(\"click\", (e) => {\n  e.stopPropagation();\n});\n\nexport function setCaption(captionText: string, animationSpeed: number): void {\n  if (captionText !== \"\") {\n    getContainer().appendChild(caption);\n    caption.style.transition = `opacity ${animationSpeed.toString()}ms ease`;\n    setTimeout(() => {\n      caption.style.opacity = \"1\";\n    }, 1);\n    caption.textContent = captionText;\n  } else {\n    caption.style.opacity = \"0\";\n    setTimeout(() => {\n      caption.remove();\n    }, animationSpeed);\n  }\n}\n","import \"./button.css\";\nimport \"./close-button.css\";\nimport { getContainer } from \"./container\";\n\nconst closeButton = document.createElement(\"button\");\ncloseButton.classList.add(\"ilb-button\");\ncloseButton.setAttribute(\"id\", \"ilb-close-button\");\n\nlet wrappedClose: ((e: Event) => void) | null = null;\n\nexport function addCloseButtonToDOM(onclick: () => void): void {\n  wrappedClose = (e): void => {\n    e.stopPropagation();\n    onclick();\n  };\n  closeButton.addEventListener(\"click\", wrappedClose);\n  getContainer().appendChild(closeButton);\n}\n\nexport function removeCloseButtonFromDOM(): void {\n  if (wrappedClose !== null) {\n    closeButton.removeEventListener(\"click\", wrappedClose);\n  }\n  closeButton.remove();\n}\n","import { getContainer } from \"./container\";\n\nexport const fullscreenEnabled: boolean =\n  // eslint-disable-next-line compat/compat -- The prefixed version fixes the incompatibility\n  document.fullscreenEnabled ||\n  ((document as LegacyDocument).webkitFullscreenEnabled ?? false);\n\nfunction fullscreenElement(): Element | null {\n  return (\n    // eslint-disable-next-line compat/compat -- The prefixed version fixes the incompatibility\n    document.fullscreenElement ??\n    (document as LegacyDocument).webkitFullscreenElement ??\n    null\n  );\n}\n\n/* eslint-disable compat/compat, @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions -- Polyfills for very old browsers */\nconst requestFullscreen = (element: HTMLElement): void => {\n  void (\n    element.requestFullscreen ||\n    (element as LegacyHTMLElement).webkitRequestFullScreen\n  ).call(element);\n};\n\nconst exitFullscreen = (): void => {\n  void (\n    document.exitFullscreen || (document as LegacyDocument).webkitExitFullscreen\n  ).call(document);\n};\n/* eslint-enable */\n\nexport function toggleFullscreen(): void {\n  if (fullscreenElement() === null) {\n    requestFullscreen(getContainer());\n  } else {\n    exitFullscreen();\n  }\n}\n","import \"./button.css\";\nimport { getContainer } from \"./container\";\nimport { toggleFullscreen } from \"./fullscreen\";\nimport \"./fullscreen-button.css\";\n\nconst fullscreenButton = document.createElement(\"button\");\nfullscreenButton.classList.add(\"ilb-button\");\nfullscreenButton.setAttribute(\"id\", \"ilb-fullscreen-button\");\nfullscreenButton.innerHTML = \"&#x26F6;\";\nfullscreenButton.addEventListener(\"click\", (e): void => {\n  e.stopPropagation();\n  toggleFullscreen();\n});\n\nexport function addFullscreenButtonToDOM(): void {\n  getContainer().appendChild(fullscreenButton);\n}\n\nexport function removeFullscreenButtonFromDOM(): void {\n  fullscreenButton.remove();\n}\n","import type { VideoCache } from \"./VideoCache\";\n\nimport { getContainer } from \"./container\";\nimport \"./ImageView.css\";\nimport { TransitionDirection } from \"./TransitionDirection\";\n\nexport interface ImageView {\n  addToDOM(\n    transitionDirection: TransitionDirection,\n    callback: () => void,\n  ): void;\n  removeFromDOM(): void;\n  startLoading(onload: () => void, onerror: () => void): void;\n  transitionIn(\n    callback: () => void,\n    previousImage: () => void,\n    nextImage: () => void,\n    closeLightbox: () => void,\n  ): void;\n  transitionOut(\n    transitionDirection: TransitionDirection,\n    callback: () => void,\n  ): void;\n}\n\nexport function ImageView(\n  image: HTMLAnchorElement,\n  options: ILBOptions,\n  videoCache: VideoCache,\n): ImageView {\n  let swipeStart = 0;\n  let swipeDiff = 0;\n  let imageElement: HTMLImageElement | HTMLVideoElement =\n    document.createElement(\"img\");\n  imageElement.setAttribute(\"id\", \"ilb-image\");\n  imageElement.setAttribute(\"src\", image.getAttribute(\"href\") ?? \"\");\n  const containerElement = document.createElement(\"div\");\n  containerElement.classList.add(\"ilb-image-container\");\n  let isVideoPreloaded: boolean | undefined = undefined;\n\n  const videoId = image.dataset[\"ilb2VideoId\"];\n  let isVideo =\n    image.dataset[\"ilb2Video\"] !== undefined && videoId !== undefined;\n  if (isVideo) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- Checked by the if above\n    const preloadedVideo = videoCache.get(videoId!);\n    if (preloadedVideo !== undefined) {\n      [imageElement, isVideoPreloaded] = preloadedVideo.element();\n    } else {\n      isVideo = false;\n    }\n  }\n  containerElement.appendChild(imageElement);\n\n  function onready(\n    callback: () => void,\n    previousImage: () => void,\n    nextImage: () => void,\n    closeLightbox: () => void,\n  ): void {\n    if (isVideo) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- Checked by the if in the constructor\n      const preloadedVideo = videoCache.get(videoId!);\n      if (preloadedVideo?.shouldAutoplay() === true) {\n        const [videoElement, isLoaded] = preloadedVideo.element();\n        if (isLoaded) {\n          void videoElement.play();\n        } else {\n          videoElement.autoplay = true;\n        }\n      }\n    } else {\n      (imageElement as HTMLImageElement).addEventListener(\"click\", (e) => {\n        e.stopPropagation();\n        if (options.quitOnImgClick) {\n          closeLightbox();\n          return;\n        }\n        const xPosRelativeToImage =\n          (e.pageX - imageElement.offsetLeft) / imageElement.width;\n        if (xPosRelativeToImage <= 1 / 3) {\n          previousImage();\n        } else {\n          nextImage();\n        }\n      });\n    }\n    imageElement.addEventListener(\"touchstart\", (e) => {\n      swipeStart = (e as TouchEvent).touches[0].pageX;\n      imageElement.style.transitionProperty = \"opacity\";\n    });\n    imageElement.addEventListener(\"touchmove\", (e) => {\n      swipeDiff = (e as TouchEvent).touches[0].pageX - swipeStart;\n      imageElement.style.left = `${swipeDiff.toString()}px`;\n    });\n    imageElement.addEventListener(\"touchend\", (e) => {\n      e.stopPropagation();\n      imageElement.style.transitionProperty = \"left, opacity\";\n      if (swipeDiff > 50) {\n        previousImage();\n      }\n      if (swipeDiff < -50) {\n        nextImage();\n      }\n      imageElement.style.left = \"0\";\n    });\n    imageElement.addEventListener(\"touchcancel\", (e) => {\n      e.stopPropagation();\n      imageElement.style.transitionProperty = \"left, opacity\";\n      imageElement.style.left = \"0\";\n    });\n    callback();\n  }\n\n  function addToDOM(\n    transitionDirection: TransitionDirection,\n    callback: () => void,\n  ): void {\n    getContainer().appendChild(containerElement);\n    const maxSize = Math.abs(100 - options.gutter);\n    imageElement.style.maxHeight = `${maxSize.toString()}%`;\n    imageElement.style.maxWidth = `${maxSize.toString()}%`;\n    imageElement.style.left = `${(-100 * transitionDirection).toString()}px`;\n    imageElement.style.transition = `all ease ${options.animationSpeed.toString()}ms`;\n    setTimeout(callback, 50);\n  }\n\n  function startLoading(onload: () => void, onerror: () => void): void {\n    imageElement.addEventListener(\"error\", onerror);\n    if (isVideoPreloaded === true) {\n      onload();\n    } else {\n      imageElement.addEventListener(\"load\", onload);\n      imageElement.addEventListener(\"loadedmetadata\", onload);\n    }\n  }\n\n  function transitionIn(\n    callback: () => void,\n    previousImage: () => void,\n    nextImage: () => void,\n    closeLightbox: () => void,\n  ): void {\n    imageElement.style.left = \"0\";\n    imageElement.style.opacity = \"1\";\n    setTimeout(() => {\n      onready(callback, previousImage, nextImage, closeLightbox);\n    }, options.animationSpeed);\n  }\n\n  function transitionOut(\n    transitionDirection: TransitionDirection,\n    callback: () => void,\n  ): void {\n    if (transitionDirection !== TransitionDirection.None) {\n      const currentLeft = parseInt(imageElement.style.left, 10) || 0;\n      imageElement.style.left = `${(currentLeft + 100 * transitionDirection).toString()}px`;\n    }\n    imageElement.style.opacity = \"0\";\n    setTimeout(() => {\n      callback();\n    }, options.animationSpeed);\n  }\n\n  function removeFromDOM(): void {\n    containerElement.remove();\n  }\n\n  return {\n    addToDOM,\n    removeFromDOM,\n    startLoading,\n    transitionIn,\n    transitionOut,\n  };\n}\n","let keyHandler: ((e: KeyboardEvent) => void) | null = null;\n\nexport function addKeyboardNavigation(\n  options: ILBOptions,\n  closeLightbox: () => void,\n  previousImage: () => void,\n  nextImage: () => void,\n): void {\n  if (!options.enableKeyboard) {\n    return;\n  }\n  keyHandler = (e): void => {\n    if (e.key === \"Escape\") {\n      e.preventDefault();\n      closeLightbox();\n    }\n    if (e.key === \"ArrowLeft\") {\n      e.preventDefault();\n      previousImage();\n    }\n    if (e.key === \"ArrowRight\") {\n      e.preventDefault();\n      nextImage();\n    }\n  };\n  document.addEventListener(\"keyup\", keyHandler);\n}\n\nexport function removeKeyboardNavigation(): void {\n  if (keyHandler !== null) {\n    document.removeEventListener(\"keyup\", keyHandler);\n  }\n}\n","import { getContainer } from \"./container\";\nimport \"./navigation.css\";\nimport { TransitionDirection } from \"./TransitionDirection\";\n\nconst navigation = document.createElement(\"div\");\nnavigation.classList.add(\"ilb-navigation\");\n\nexport function addNavigationItems(\n  images: Array<HTMLAnchorElement>,\n  currentIndexFn: () => number | null,\n  change: (index: number, transitionDirection: TransitionDirection) => void,\n  animationSpeed: number,\n): void {\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of -- The result won't be used anyway\n  for (let i = 0; i < images.length; i++) {\n    const button = document.createElement(\"button\");\n    button.style.transition = `background-color ${animationSpeed.toString()}ms ease`;\n    const buttonClick = (): void => {\n      const currentIndex = currentIndexFn();\n      if (\n        button.classList.contains(\"ilb-navigation-active\") ||\n        currentIndex === null ||\n        button.parentNode === null\n      ) {\n        return;\n      }\n      const buttonIndex = Array.prototype.indexOf.call(\n        button.parentNode.childNodes,\n        button,\n      );\n      const loadDirection =\n        buttonIndex < currentIndex\n          ? TransitionDirection.Left\n          : TransitionDirection.Right;\n      change(buttonIndex, loadDirection);\n    };\n    button.addEventListener(\"click\", buttonClick);\n    button.addEventListener(\"touchend\", buttonClick);\n    navigation.appendChild(button);\n  }\n}\n\nexport function changeNavigationCurrent(currentIndex: number): void {\n  for (let i = 0; i < navigation.children.length; i++) {\n    navigation.children.item(i)?.classList.remove(\"ilb-navigation-active\");\n  }\n  navigation.children\n    .item(currentIndex)\n    ?.classList.add(\"ilb-navigation-active\");\n}\n\nexport function addNavigationToDOM(\n  images: Array<HTMLAnchorElement>,\n  currentIndexFn: () => number | null,\n  change: (index: number, transitionDirection: TransitionDirection) => void,\n  animationSpeed: number,\n): void {\n  navigation.textContent = \"\";\n  addNavigationItems(images, currentIndexFn, change, animationSpeed);\n  const currentIndex = currentIndexFn();\n  if (currentIndex !== null) {\n    changeNavigationCurrent(currentIndex);\n  }\n  getContainer().appendChild(navigation);\n\n  navigation.addEventListener(\"click\", (e) => {\n    e.stopPropagation();\n  });\n  navigation.addEventListener(\"touchend\", (e) => {\n    e.stopPropagation();\n  });\n}\n","import type { VideoOptions } from \"./interfaces/VideoOptions\";\n\nexport interface PreloadedVideo {\n  element(): [HTMLVideoElement, boolean];\n  id(): string;\n  shouldAutoplay(): boolean;\n}\n\nexport function PreloadedVideo(\n  image: HTMLAnchorElement,\n  videoOptions: VideoOptions,\n): PreloadedVideo {\n  let tempId = image.dataset[\"ilb2Id\"];\n  if (tempId === undefined) {\n    // Random id\n    tempId = `a${(((1 + Math.random()) * 0x10000) | 0).toString(16)}`;\n  }\n  image.dataset[\"ilb2VideoId\"] = tempId;\n  const videoId = tempId;\n\n  const videoElement = document.createElement(\"video\");\n  videoElement.setAttribute(\"id\", \"ilb-image\");\n  videoElement.preload = \"metadata\";\n  videoElement.dataset[\"ilb2VideoId\"] = videoId;\n  let isLoaded = false;\n  let autoplay = false;\n\n  for (const [key, value] of Object.entries(videoOptions)) {\n    switch (key) {\n      case \"autoplay\":\n        autoplay = true;\n        break;\n      case \"controls\":\n      case \"loop\":\n      case \"muted\":\n      case \"poster\":\n      case \"preload\":\n      case \"src\":\n        videoElement.setAttribute(key, (value as number | string).toString());\n        break;\n      default:\n    }\n  }\n  if (videoOptions.sources) {\n    for (const source of videoOptions.sources) {\n      const sourceElement = document.createElement(\"source\");\n      for (const [key, value] of Object.entries(source)) {\n        sourceElement.setAttribute(key, value as string);\n      }\n      videoElement.appendChild(sourceElement);\n    }\n  }\n  videoElement.addEventListener(\"loadedmetadata\", () => {\n    isLoaded = true;\n  });\n\n  function id(): string {\n    return videoId;\n  }\n\n  function element(): [HTMLVideoElement, boolean] {\n    return [videoElement, isLoaded];\n  }\n\n  function shouldAutoplay(): boolean {\n    return autoplay;\n  }\n\n  return {\n    element,\n    id,\n    shouldAutoplay,\n  };\n}\n","import type { VideoOptions } from \"./interfaces/VideoOptions\";\n\nimport { PreloadedVideo } from \"./PreloadedVideo\";\n\nexport interface VideoCache {\n  add(elements: Array<HTMLAnchorElement>): void;\n  get(videoId: string): PreloadedVideo | undefined;\n}\n\nexport function VideoCache(): VideoCache {\n  const videos: Array<PreloadedVideo> = [];\n\n  function add(elements: Array<HTMLAnchorElement>): void {\n    for (const image of elements) {\n      const videoOptions = image.dataset[\"ilb2Video\"];\n      if (videoOptions === undefined) {\n        continue;\n      }\n      videos.push(\n        PreloadedVideo(image, JSON.parse(videoOptions) as VideoOptions),\n      );\n    }\n  }\n\n  function get(videoId: string): PreloadedVideo | undefined {\n    return videos.find((x) => x.id() === videoId);\n  }\n\n  return {\n    add,\n    get,\n  };\n}\n","import {\n  addActivityIndicatorToDOM,\n  removeActivityIndicatorFromDOM,\n} from \"./activity-indicator\";\nimport { addArrowsToDOM, removeArrowsFromDOM } from \"./arrows\";\nimport { setCaption } from \"./caption\";\nimport { addCloseButtonToDOM, removeCloseButtonFromDOM } from \"./close-button\";\nimport {\n  addContainerToDOM,\n  darkenOverlay,\n  getContainer,\n  removeContainerFromDOM,\n  transitionOutContainer,\n} from \"./container\";\nimport { fullscreenEnabled } from \"./fullscreen\";\nimport {\n  addFullscreenButtonToDOM,\n  removeFullscreenButtonFromDOM,\n} from \"./fullscreen-button\";\nimport { popHistory, pushQuitToHistory, pushToHistory } from \"./history\";\nimport { ImageView } from \"./ImageView\";\nimport {\n  addKeyboardNavigation,\n  removeKeyboardNavigation,\n} from \"./keyboard-navigation\";\nimport {\n  addNavigationItems,\n  addNavigationToDOM,\n  changeNavigationCurrent,\n} from \"./navigation\";\nimport { TransitionDirection } from \"./TransitionDirection\";\nimport { VideoCache } from \"./VideoCache\";\n\nexport interface State {\n  addImages(images: Array<HTMLAnchorElement>): void;\n  close(skipHistory?: boolean): void;\n  images(): Array<HTMLAnchorElement>;\n  next(): void;\n  open(index: number, skipHistory?: boolean): void;\n  openWithImage(image: HTMLAnchorElement): void;\n  previous(): void;\n  set(): string | undefined;\n}\n\nexport function State(\n  // The lightbox options\n  options: ILBOptions,\n  // The value of data-imagelightbox on the images\n  lightboxSet: string | undefined,\n  initialImages: Array<HTMLAnchorElement>,\n): State {\n  // The clickable images in the lightbox\n  const targetImages: Array<HTMLAnchorElement> = [];\n\n  // Cached preloaded videos\n  const videoCache: VideoCache = VideoCache();\n\n  // The index of the currently open image, or null if the lightbox is closed\n  let currentImage: number | null = null;\n\n  // The currently displayed image view\n  let currentImageView: ImageView | null = null;\n\n  // !!! State initialization is at the bottom!\n\n  function set(): string | undefined {\n    return lightboxSet;\n  }\n\n  function images(): Array<HTMLAnchorElement> {\n    return targetImages;\n  }\n\n  /**\n   * The lightbox transition functions.\n   *\n   * The most important part of the State is managing the transition lifecycle. When transitioning between images, the lifecycle takes the following steps:\n   *\n   * For transitioning out an old image:\n   *\n   * 1. Start visually transitioning the old image out (slide + fade out)\n   * 2. When the image is visually gone, actually remove it from the DOM\n   *\n   * For transitioning in a new image:\n   *\n   * 1. Start loading the new image in the background (startLoadingNewImage)\n   * 2. When the new image is loaded, add it to the DOM, but keep it invisible (addNewImage)\n   * 3. After adding the image to the DOM, transition it into place - slide + fade in (transitionInNewImage)\n   */\n\n  function removeOldImage(\n    transitionDirection: TransitionDirection,\n    callback?: () => void,\n  ): void {\n    if (currentImageView === null) {\n      return;\n    }\n    const oldImageView = currentImageView;\n    oldImageView.transitionOut(transitionDirection, () => {\n      oldImageView.removeFromDOM();\n      callback?.();\n    });\n  }\n\n  function transitionInNewImage(): void {\n    currentImageView?.transitionIn(\n      removeActivityIndicatorFromDOM,\n      /* eslint-disable @typescript-eslint/no-use-before-define -- Cyclical dependencies */\n      previous,\n      next,\n      close,\n      /* eslint-enable */\n    );\n  }\n\n  function addNewImage(transitionDirection: TransitionDirection): void {\n    currentImageView?.addToDOM(transitionDirection, () => {\n      if (currentImage === null) {\n        return;\n      }\n      const image = targetImages[currentImage];\n      if (options.caption) {\n        setCaption(\n          image.dataset[\"ilb2Caption\"] ??\n            image.getElementsByTagName(\"img\").item(0)?.alt ??\n            \"\",\n          options.animationSpeed,\n        );\n      }\n      transitionInNewImage();\n      if (options.preloadNext && currentImage + 1 < targetImages.length) {\n        const nextImage = targetImages[currentImage + 1];\n        const nextImageElement = document.createElement(\"img\");\n        nextImageElement.setAttribute(\n          \"src\",\n          nextImage.getAttribute(\"href\") ?? \"\",\n        );\n      }\n      getContainer().dispatchEvent(new Event(\"ilb:loaded\", { bubbles: true }));\n    });\n  }\n\n  function startLoadingNewImage(\n    newIndex: number,\n    transitionDirection: TransitionDirection,\n  ): void {\n    const newImageView = ImageView(targetImages[newIndex], options, videoCache);\n    currentImage = newIndex;\n    currentImageView = newImageView;\n    newImageView.startLoading(\n      () => {\n        addNewImage(transitionDirection);\n      },\n      () => {\n        removeActivityIndicatorFromDOM();\n      },\n    );\n  }\n\n  // Public functions wrapping the state transition functions\n\n  function close(skipHistory = false): void {\n    if (currentImage === null) {\n      return;\n    }\n    if (options.activity) {\n      addActivityIndicatorToDOM();\n    }\n\n    removeKeyboardNavigation();\n\n    if (options.history && !skipHistory) {\n      pushQuitToHistory();\n    }\n\n    getContainer().dispatchEvent(new Event(\"ilb:quit\", { bubbles: true }));\n\n    transitionOutContainer();\n    removeOldImage(TransitionDirection.None, () => {\n      currentImage = null;\n      currentImageView = null;\n      removeArrowsFromDOM();\n      removeCloseButtonFromDOM();\n      removeFullscreenButtonFromDOM();\n      removeContainerFromDOM();\n    });\n  }\n\n  function change(\n    index: number,\n    transitionDirection: TransitionDirection,\n    skipHistory = false,\n  ): void {\n    if (currentImage === null) {\n      return;\n    }\n\n    if (options.history && !skipHistory) {\n      pushToHistory(index, set(), images());\n    }\n\n    if (options.activity) {\n      addActivityIndicatorToDOM();\n    }\n    changeNavigationCurrent(index);\n\n    removeOldImage(transitionDirection);\n    startLoadingNewImage(index, transitionDirection);\n  }\n\n  function previous(): void {\n    if (currentImage === null) {\n      return;\n    }\n\n    let newIndex = currentImage - 1;\n    if (currentImage === 0) {\n      if (options.quitOnEnd) {\n        close();\n        return;\n      }\n      newIndex = targetImages.length - 1;\n    }\n    targetImages[newIndex].dispatchEvent(\n      new Event(\"ilb:previous\", { bubbles: true }),\n    );\n    change(newIndex, TransitionDirection.Left);\n  }\n\n  function next(): void {\n    if (currentImage === null) {\n      return;\n    }\n\n    let newIndex = currentImage + 1;\n    if (currentImage === targetImages.length - 1) {\n      if (options.quitOnEnd) {\n        close();\n        return;\n      }\n      newIndex = 0;\n    }\n    targetImages[newIndex].dispatchEvent(\n      new Event(\"ilb:next\", { bubbles: true }),\n    );\n    change(newIndex, TransitionDirection.Right);\n  }\n\n  function open(index: number, skipHistory = false): void {\n    if (currentImage !== null) {\n      return;\n    }\n    addContainerToDOM(options.animationSpeed, options.quitOnDocClick, close);\n    if (options.activity) {\n      addActivityIndicatorToDOM();\n    }\n    addKeyboardNavigation(options, close, previous, next);\n    if (options.arrows) {\n      addArrowsToDOM(previous, next);\n    }\n    if (options.button) {\n      addCloseButtonToDOM(close);\n    }\n    if (options.fullscreen && fullscreenEnabled) {\n      addFullscreenButtonToDOM();\n    }\n    if (options.overlay) {\n      darkenOverlay();\n    }\n\n    if (options.history && !skipHistory) {\n      pushToHistory(index, set(), images());\n    }\n\n    targetImages[index].dispatchEvent(\n      new Event(\"ilb:start\", { bubbles: true }),\n    );\n    startLoadingNewImage(index, TransitionDirection.None);\n\n    // Navigation needs to know current image, so it needs to be added after startLoadingNewImage\n    if (options.navigation) {\n      addNavigationToDOM(\n        images(),\n        () => currentImage,\n        change,\n        options.animationSpeed,\n      );\n    }\n  }\n\n  function openWithImage(image: HTMLAnchorElement): void {\n    const index = targetImages.indexOf(image);\n    if (index < 0) {\n      return;\n    }\n    open(index);\n  }\n\n  function addImages(newImages: Array<HTMLAnchorElement>): void {\n    const validImages = newImages\n      .filter((x) => !targetImages.includes(x))\n      .filter(\n        (element): boolean =>\n          element.tagName.toLowerCase() === \"a\" &&\n          (new RegExp(`.(${options.allowedTypes})$`, \"i\").test(element.href) ||\n            element.dataset[\"ilb2Video\"] !== undefined),\n      );\n    videoCache.add(validImages);\n    targetImages.push(...validImages);\n    for (const image of validImages) {\n      image.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        openWithImage(image);\n      });\n    }\n    addNavigationItems(\n      validImages,\n      () => currentImage,\n      change,\n      options.animationSpeed,\n    );\n  }\n\n  // State initialization\n\n  addImages(initialImages);\n\n  if (options.history) {\n    window.addEventListener(\"popstate\", (e) => {\n      popHistory(e, set(), images(), currentImage, open, close, change);\n    });\n  }\n\n  return {\n    addImages,\n    close,\n    images,\n    next,\n    open,\n    openWithImage,\n    previous,\n    set,\n  };\n}\n","import { openHistory } from \"./history\";\nimport { State } from \"./State\";\n\nexport class ImageLightbox {\n  private readonly s: State;\n\n  public constructor(\n    images:\n      | Array<HTMLAnchorElement>\n      | HTMLCollectionOf<HTMLAnchorElement>\n      | NodeListOf<HTMLAnchorElement>,\n    options?: Partial<ILBOptions>,\n  ) {\n    const opts: ILBOptions = {\n      activity: true,\n      allowedTypes: \"\",\n      animationSpeed: 250,\n      arrows: true,\n      button: true,\n      caption: false,\n      enableKeyboard: true,\n      fullscreen: true,\n      gutter: 10,\n      history: false,\n      navigation: false,\n      overlay: true,\n      preloadNext: true,\n      quitOnDocClick: true,\n      quitOnEnd: true,\n      quitOnImgClick: false,\n      ...options,\n    };\n    this.s = State(\n      opts,\n      images.length > 0 ? (images[0].dataset[\"imagelightbox\"] ?? \"\") : \"\",\n      Array.from(images),\n    );\n\n    if (opts.history) {\n      this.openHistory();\n    }\n  }\n\n  public addImages(\n    images:\n      | Array<HTMLAnchorElement>\n      | HTMLCollectionOf<HTMLAnchorElement>\n      | NodeListOf<HTMLAnchorElement>,\n  ): void {\n    this.s.addImages(Array.from(images));\n  }\n\n  public close(): void {\n    this.s.close();\n  }\n\n  public next(): void {\n    this.s.next();\n  }\n\n  public open(image?: HTMLAnchorElement): void {\n    if (image !== undefined) {\n      this.s.openWithImage(image);\n    } else {\n      this.s.open(0);\n    }\n  }\n\n  public openHistory(): void {\n    openHistory(\n      this.s.set(),\n      this.s.images(),\n      (index: number, skipHistory?: boolean) => {\n        this.s.open(index, skipHistory);\n      },\n    );\n  }\n\n  public previous(): void {\n    this.s.previous();\n  }\n}\n"],"names":["addQueryField","query","key","value","newField","newQuery","keyRegex","getQueryField","keyValuePair","removeQueryField","keyRegex1","keyRegex2","TransitionDirection","pushQuitToHistory","pushToHistory","index","set","images","newIndex","newHistoryState","openHistory","open","id","image","popHistory","event","currentIndex","close","change","historyState","newId","e","container","wrappedOnclick","addContainerToDOM","animationSpeed","attachOnclick","onclick","darkenOverlay","transitionOutContainer","removeContainerFromDOM","getContainer","activityIndicator","addActivityIndicatorToDOM","removeActivityIndicatorFromDOM","leftArrow","rightArrow","wrappedLeft","wrappedRight","addArrowsToDOM","onleft","onright","removeArrowsFromDOM","caption","setCaption","captionText","closeButton","wrappedClose","addCloseButtonToDOM","removeCloseButtonFromDOM","fullscreenEnabled","fullscreenElement","requestFullscreen","element","exitFullscreen","toggleFullscreen","fullscreenButton","addFullscreenButtonToDOM","removeFullscreenButtonFromDOM","ImageView","options","videoCache","swipeStart","swipeDiff","imageElement","containerElement","isVideoPreloaded","videoId","isVideo","preloadedVideo","onready","callback","previousImage","nextImage","closeLightbox","videoElement","isLoaded","addToDOM","transitionDirection","maxSize","startLoading","onload","onerror","transitionIn","transitionOut","currentLeft","removeFromDOM","keyHandler","addKeyboardNavigation","removeKeyboardNavigation","navigation","addNavigationItems","currentIndexFn","i","button","buttonClick","buttonIndex","loadDirection","changeNavigationCurrent","_a","_b","addNavigationToDOM","PreloadedVideo","videoOptions","tempId","autoplay","source","sourceElement","shouldAutoplay","VideoCache","videos","add","elements","get","x","State","lightboxSet","initialImages","targetImages","currentImage","currentImageView","removeOldImage","oldImageView","transitionInNewImage","previous","next","addNewImage","startLoadingNewImage","newImageView","skipHistory","openWithImage","addImages","newImages","validImages","ImageLightbox","opts"],"mappings":"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"}